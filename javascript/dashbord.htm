<!DOCTYPE html>
<html>
	<head>
	
	<style>
		.node rect {
		  cursor: move;
		  fill-opacity: .9;
		  shape-rendering: crispEdges;
		}

		.node text {
		  pointer-events: none;
		  text-shadow: 0 1px 0 #fff;
		}

		.link {
		  fill: none;
		  stroke: #000;
		  stroke-opacity: .2;
		}

		.link:hover {
		  stroke-opacity: .5;
		}
		
		#main {
			width: 100vw;
			height:100vh;
		}
		
		#leftpanel {
			float: left;
			width: 18vw;
			height: 100vh;
		}
		#mainpanel {
			float: right;
			width: 79vw;
			height: 100vh;
		}
		
		.cat_list {
			background-color: #eee;
			margin: 1vh;
		}
		
		.disp_window {
			height: 45%;
			width: 45%;
			float: left;
			background-color: #eee;
			margin: 1px;
		}
		
		.li {
			padding: 1vh 2vw 1vh 3vw;
		}
		
		#map {
		  width: 100%;
		  height: 100%;
		  margin: 0;
		  padding: 0;
		}

		.stations, .stations svg {
		  position: absolute;
		}

		.stations svg {
		  width: 60px;
		  height: 20px;
		  padding-right: 100px;
		  font: 10px sans-serif;
		}

		.stations circle {
		  fill: brown;
		  stroke: black;
		  stroke-width: 1.5px;
		}
	</style>
	
	</head>

	<body>
		<div id="main">
			<div id="leftpanel">
				<div class="cat_list" id="sector_list">
					
				</div>
				<div class="cat_list">
					world
				</div>
			</div>
			<div id="mainpanel">
				<div class="disp_window">
					<div id="map"></div>
				</div>
				<div class="disp_window" id="chart">
				
				</div>
				<div class="disp_window" id="info">
				
				</div>
				<div class="disp_window" id="flowmap">
				
				</div>
			</div>
		</div>
		<script src="../javascript/d3.min.js"></script>
		<script src="../javascript/sankey.js"></script>
		<script src="../javascript/sanktest.js"></script>
		<script>
			var host = "http://" + window.location.host;
			
			var xhttp = new XMLHttpRequest();
			xhttp.open("GET", host + "/list1/build" , false);
			xhttp.send();
			document.getElementById("sector_list").innerHTML = xhttp.responseText;
			
			function change_sector(name,bool) {
				xhttp.open("GET", host + "/list1/select/"+name+"/"+bool, false);
				xhttp.send();
				sankey_update();
			}
			
			function sankey_update() {
				xhttp.open("GET", host + "/sankey/update", false)
				xhttp.send();
				var data = JSON.parse(xhttp.responseText);
				make_sankey(data);
			}
		</script>
		<script src="http://maps.google.com/maps/api/js?sensor=true"></script>
		<script src="http://d3js.org/d3.v3.min.js"></script>
		<script>
			// Create the Google Map…
			var map = new google.maps.Map(d3.select("#map").node(), {
			  zoom: 8,
			  center: new google.maps.LatLng(52.3, 5.3),
			  mapTypeId: google.maps.MapTypeId.TERRAIN
			});

			// Load the station data. When the data comes back, create an overlay.
			d3.json("./javascript/cities.json", function(error, data) {
			  if (error) throw error;

			  var overlay = new google.maps.OverlayView();

			  // Add the container when the overlay is added to the map.
			  overlay.onAdd = function() {
				var layer = d3.select(this.getPanes().overlayLayer).append("div")
					.attr("class", "stations");

				// Draw each marker as a separate SVG element.
				// We could use a single SVG, but what size would it have?
				overlay.draw = function() {
				  var projection = this.getProjection(),
					  padding = 10;

				  var marker = layer.selectAll("svg")
					  .data(d3.entries(data))
					  .each(transform) // update existing markers
					.enter().append("svg")
					  .each(transform)
					  .attr("class", "marker");

				  // Add a circle.
				  marker.append("circle")
					  .attr("r", 5)
					  .attr("cx", padding)
					  .attr("cy", padding);

				  // Add a label.
				  marker.append("text")
					  .attr("x", padding + 7)
					  .attr("y", padding)
					  .attr("dy", ".31em")
					  .text(function(d) { return d.key; });

				  function transform(d) {
					d = new google.maps.LatLng(d.value[0], d.value[1]);
					d = projection.fromLatLngToDivPixel(d);
					return d3.select(this)
						.style("left", (d.x - padding) + "px")
						.style("top", (d.y - padding) + "px");
				  }
				};
			  };

			  // Bind our overlay to the map…
			  overlay.setMap(map);
			});
		</script>

	</body>
</html>
